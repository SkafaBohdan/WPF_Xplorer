<Window x:Class="WPF_Xplorer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Xplorer"
        xmlns:command="clr-namespace:WPF_Xplorer.Commands" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewmodels="clr-namespace:WPF_Xplorer.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:ApplicationMainWindowViewModel}"
        mc:Ignorable="d"
        Title="WPF_PDFXplorer" Height="600" Width="800" Name="WPF_PDFXplorer"
        MinHeight="700" MinWidth="950">
   
    
    <Grid Background="AliceBlue">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.8*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Menu Grid.ColumnSpan="2" FontSize="14" Margin="3">
            <MenuItem Header="File" >
                <MenuItem Header="Open" 
                          Command="{Binding OpenFileCommand}" 
                          CommandParameter="{Binding ElementName=tree_pdf}"/>
                <MenuItem Header="Close file" 
                          Command="{Binding ClosePdfFileCommand}"
                          CommandParameter="{Binding ElementName=tree_pdf}"/>
                <MenuItem Header="Exit">
                    <MenuItem.Command>
                        <command:CloseApplicationCommand />
                    </MenuItem.Command>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem.Command>
                    <command:HelpAppCommand/>
                </MenuItem.Command>
            </MenuItem>
            <Separator/>
        </Menu>
        <TextBlock Margin="100 6 5 5" Text="Name Pdf file:"/>
        <TextBlock  Margin="180 6 5 5" Grid.ColumnSpan="2" Text="{Binding PdfDocProc.Name,  Mode=OneWay, 
            UpdateSourceTrigger=PropertyChanged}" />

        <ToolBar Grid.Row="1" Margin="0 0 -545 0" >
            <ToolBar.Style>
                <Style TargetType="ToolBar">
                    <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    <Setter Property="OverflowMode" Value="Never" />
                </Style>
            </ToolBar.Style>
            <Button Command="{Binding OpenFileCommand}" 
                    CommandParameter="{Binding ElementName=tree_pdf}"
                    ToolTip="Open File">
                <Image Source="/Static/Image/open2.ico"/>
            </Button>
            <Separator/>
            <Button ToolTip="Info">
                <Image Source="/Static/Image/about.png" />
                <Button.Command>
                    <command:HelpAppCommand/>
                </Button.Command>
            </Button>
            <Separator/>
            <Button Command="{Binding OpenBookmarkCommand}"
                    ToolTip="Views bookmarks">
                <Image Source="/Static/Image/bookmark--v1.png"/>
            </Button>
            <Separator/>
            <Button Command="{Binding OpenBookmarkUpdateWindowCommand}"
                    ToolTip="Add or delete bookmarks">
                <Image Source="/Static/Image/addBookmarks.png"/>
            </Button>
        </ToolBar>

        <TreeView Grid.Row="2" Padding="2"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  Name="tree_pdf">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction
                        Command="{Binding SelectedItemCommand}"
                        CommandParameter="{Binding SelectedItem, ElementName=tree_pdf}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TreeView.Resources>
                <Style TargetType="{x:Type TreeViewItem}" >
                    <Setter Property="command:Behaviour.ExpandingBehaviour"
                                    Value="{Binding ExpandCommand}"/>
                   
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton Grid.Column="0"
                                                x:Name="Expander"
                                                IsChecked="{Binding Path=IsExpanded,
                                                RelativeSource={RelativeSource TemplatedParent}}" 
                                                ClickMode="Press"
                                                Width="16" Height="16" >
                                    </ToggleButton>
                                    <ContentPresenter Grid.Row="0"
                                                              Grid.Column="1"
                                                              x:Name="Item_Header"
                                                              ContentSource="Header"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                    <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Grid.Column="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter TargetName="ItemsHost"
                                                        Property="Visibility"
                                                        Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander"
                                                        Property="Visibility" 
                                                        Value="Hidden"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false"/>
                                            <Condition Property="Width" Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Item_Header" Property="MinWidth" Value="75"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false"/>
                                            <Condition Property="Height" Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Item_Header" Property="MinHeight" Value="18"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </TreeView.Resources>
        </TreeView>

        <StatusBar Grid.Row="3" 
                   Grid.ColumnSpan="2"
                   Margin="2 1 0 -1"
                   Background="AliceBlue">
            <TextBlock Text="Pdf Xplorer / Version: 1.03 " FontSize="9" Margin="3 -1 0 0"/>
            <Separator />
            <TextBlock Text="Path pdf file: " FontSize="9"  Margin="3 -1 0 0 "/>
            <TextBlock Text="{Binding PdfDocProc.DocPath}" FontSize="8"/>
        </StatusBar>


            <Grid Grid.Row="2"
              Grid.Column="1"
              Background="White"
              Name="Description">
      
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="120" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" /> 
            </Grid.RowDefinitions>

            <Border Grid.Column="0" Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                <TextBlock TextAlignment="Center" Padding="5" Text="Key" />
            </Border>
            <Border Grid.Column="1" Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                <TextBlock TextAlignment="Center" Padding="5" Text="Type" />
            </Border>
            <Border Grid.Column="2" Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                <TextBlock TextAlignment="Center" Padding="5" Text="Value" />
            </Border>

            <Border Grid.Column="0" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                <TextBlock Padding="5" 
                           Text="{Binding SelectedObject.DisplayKey,
                    UpdateSourceTrigger=PropertyChanged}" />
            </Border>
                        
            <Border Grid.Column="1" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                <TextBlock Padding="5" 
                           Text="{Binding SelectedObject.DisplayType, 
                    UpdateSourceTrigger=PropertyChanged}" />
            </Border>
            <Border Grid.Column="2" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                <TextBlock Padding="5" 
                           Text="{Binding SelectedObject.DisplayValue, 
                    UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"  />
            </Border>



            <Border Grid.Column="0" Grid.Row="2" BorderBrush="Black" BorderThickness="1">
                <ListBox ItemsSource="{Binding PdfDocProc.GridListItemKey, 
                    UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border Grid.Column="1" Grid.Row="2" BorderBrush="Black" BorderThickness="1">
                <ListBox ItemsSource="{Binding PdfDocProc.GridListItemType, 
                    UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
             <Border Grid.Column="2" Grid.Row="2" BorderBrush="Black" BorderThickness="1">
                <ListBox ItemsSource="{Binding PdfDocProc.GridListItemValue, 
                    UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            
            
            <TextBox Grid.ColumnSpan="3" 
                     Grid.Row="3" 
                     Grid.Column="0" 
                     Margin="0 15 15 0" 
                     ScrollViewer.CanContentScroll="True"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     Text="{Binding SelectedObject.StreamValue, 
                UpdateSourceTrigger=PropertyChanged,
                Mode=OneWay}" 
                     IsReadOnly="True"/>
        </Grid> 

    </Grid>
</Window>
